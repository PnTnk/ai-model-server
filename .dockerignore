# .dockerignore file for AI Model Server

# Exclude large model directories (models will be downloaded at runtime)
models/
models/*

# Exclude temporary files and cache
tmp/
tmp/*
__pycache__/
**/__pycache__/
**/*.pyc
**/*.pyo
**/*.pyd
.Python

# Exclude test files
tests/
tests/*
**/*test*.py
**/*_test.py

# Exclude logs (will be generated in container)
logs/
logs/*
*.log

# Python virtual environment
venv/
env/
.venv/
.env/
ENV/
env.bak/
venv.bak/

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# Git files
.git/
.gitignore
.gitattributes

# Documentation files (optional - uncomment if you want to exclude)
# README.md
# *.md
# docs/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Development and build files
.pytest_cache/
.coverage
.nyc_output
coverage/
*.cover
*.py,cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# Environment variables (keep .env if it contains non-sensitive config)
.env

# Local configuration files that shouldn't be in production
config/local.py
config/development.py
*.local

# Package managers
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Backup files
*.bak
*.backup
*.old
*.orig
*.tmp

# Large files that shouldn't be in Docker context
*.tar
*.tar.gz
*.zip
*.rar
*.7z

# Database files (if any)
*.db
*.sqlite
*.sqlite3

# Certificate files (should be mounted as volumes)
*.pem
*.key
*.crt
*.cert

# Docker files themselves (prevent infinite recursion)
Dockerfile*
docker-compose*.yml
.dockerignore

# CI/CD files
.github/
.gitlab-ci.yml
.travis.yml
Jenkinsfile

# Local development scripts
scripts/dev/
scripts/local/
run_local.sh
debug.sh